# Copyright 2020-2024 Chris Croome
#
# This file is part of the Webarchitects Node.js Ansible role.
#
# The Webarchitects Node.js Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Node.js Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Node.js Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Configure APT for Node.js
  block:

    - name: Dependancies present
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
        state: present

    - name: Find legacy Node.js apt list files
      ansible.builtin.find:
        paths: /etc/apt/sources.list.d
        patterns: "*node*.list"
      register: nodejs_old_apt_list_files

    - name: List legacy Node.js apt list files to be disabled
      ansible.builtin.debug:
        msg: "apt list file {{ file.path }} to be moved to {{ file.path }}.ansible.save"
      loop: "{{ nodejs_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( nodejs_old_apt_list_files.matched >= 1 )

    - name: Disable legacy Node.js apt list files
      ansible.builtin.command: "mv {{ file.path }} {{ file.path }}.ansible.save"
      loop: "{{ nodejs_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( nodejs_old_apt_list_files.matched >= 1 )
      changed_when: true

    - name: Legacy Node.js GPG key absent
      ansible.builtin.apt_key:
        id: 9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Node.js ASCII armored GPG key present
      ansible.builtin.get_url:
        url: "{{ nodejs_nodesource_gpg_url }}"
        checksum: "{{ nodejs_nodesource_gpg_checksum }}"
        dest: /root/nodejs.asc
        force: true
        mode: "0644"
        owner: root
        group: root
      register: nodejs_gpg_asc_file

    - name: Stat Node.js GPG ASCII armored file
      ansible.builtin.stat:
        path: /root/nodejs.asc
      register: nodejs_asc_file

    - name: Check gpg key when it exists
      block:

        - name: Stat Node.js GPG dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/nodejs.gpg
          register: nodejs_gpg_file

        - name: Node.js GPG key dearmored
          ansible.builtin.shell: |-
            set -e -o pipefail
            gpg --dearmor < /root/nodejs.asc > /etc/apt/keyrings/nodejs.gpg
            chmod 644 /etc/apt/keyrings/nodejs.gpg
          args:
            executable: "{{ ansible_local.bash.path }}"
          changed_when: false
          when:
            ( nodejs_gpg_asc_file.changed | bool ) or
            ( not nodejs_gpg_file.stat.exists | bool )

        - name: Stat Node.js GPG dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/nodejs.gpg
          register: nodejs_gpg_file

        - name: Node.js GPG key check command
          ansible.builtin.command: >
            gpg --with-colons
            {% if ansible_local.gpg.version is version('2.2.12', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/nodejs.gpg
          when: nodejs_gpg_file.stat.exists | bool
          check_mode: false
          changed_when: false
          register: nodejs_gpg

        - name: Set a fact for the GPG fingerprints
          ansible.builtin.set_fact:
            nodejs_nodesource_gpg_fingerprints_found: "{{ nodejs_gpg.stdout | string | community.general.jc('gpg') | community.general.json_query('[?type==`fpr`].user_id') | list }}"

        - name: Debug GPG fingerprints
          ansible.builtin.debug:
            var: nodejs_nodesource_gpg_fingerprints_found
            verbosity: 2

        - name: Node.js GPG key check only first fingerprint for GPG versions less that 2.2.12
          ansible.builtin.assert:
            that:
              - nodejs_nodesource_gpg_fingerprints[0] == nodejs_nodesource_gpg_fingerprints_found[0]
          when: ( ansible_local.gpg.version is version('2.2.12', '<') )

        - name: Node.js GPG key check all fingerprints
          ansible.builtin.assert:
            that:
              - nodejs_nodesource_gpg_fingerprints_found | difference(nodejs_nodesource_gpg_fingerprints) | length == 0
              - nodejs_nodesource_gpg_fingerprints | difference(nodejs_nodesource_gpg_fingerprints_found) | length == 0
          when: ( ansible_local.gpg.version is version('2.2.12', '>=') )

      when: ( nodejs_asc_file.stat.exists | bool )

    - name: Stat Node.js apt sources file
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/node.sources
      register: nodejs_sources_path

    - name: Read the Node.js apt sources file
      ansible.builtin.include_tasks: sources_file.yml
      when: nodejs_sources_path.stat.exists | bool

    - name: Node.js apt sources file present
      ansible.builtin.deb822_repository:
        allow_downgrade_to_insecure: false
        allow_insecure: false
        allow_weak: false
        architectures: "{{ ansible_facts.ansible_local.dpkg.arch }}"
        check_date: true
        check_valid_until: true
        components: main
        enabled: true
        name: node
        signed_by: /etc/apt/keyrings/nodejs.gpg
        suites: "{{ ansible_distribution_release }}"
        types: deb
        uris: "https://deb.nodesource.com/node_{{ nodejs_version }}.x"
      register: nodejs_sources

    - name: Stat Node.js apt sources file
      ansible.builtin.stat:
        path: /etc/apt/sources.list.d/node.sources
      register: nodejs_sources_path

    - name: Read the Node.js apt sources file
      ansible.builtin.include_tasks: sources_file.yml
      when: nodejs_sources_path.stat.exists | bool

    - name: Node.js apt preferences present
      ansible.builtin.template:
        src: nodejs.pref.j2
        dest: /etc/apt/preferences.d/node.pref
        mode: "0644"
        owner: root
        group: root
      register: nodejs_preferences

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true
      when: ( nodejs_sources.changed | bool ) or ( nodejs_preferences.changed | bool )

  tags:
    - nodejs
    - nodejs_apt
...
