---
- name: Configure APT for NodeJS
  block:

    - name: Dependancies present
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
        state: present

    - name: Find legacy NodeJS apt list files
      ansible.builtin.find:
        paths: /etc/apt/sources.list.d
        patterns: "*node*.list"
      register: nodejs_old_apt_list_files

    - name: List legacy NodeJS apt list files to be disabled
      ansible.builtin.debug:
        msg: "apt list file {{ file.path }} to be moved to {{ file.path }}.ansible.save"
      loop: "{{ nodejs_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( nodejs_old_apt_list_files.matched >= 1 )

    - name: Disable legacy NodeJS apt list files
      ansible.builtin.command: "mv {{ file.path }} {{ file.path }}.ansible.save"
      loop: "{{ nodejs_old_apt_list_files.files }}"
      loop_control:
        loop_var: file
        label: "{{ file.path | basename }}"
      when: ( nodejs_old_apt_list_files.matched >= 1 )

    - name: Legacy NodeJS GPG key absent
      ansible.builtin.apt_key:
        id: 9FD3B784BC1C6FC31A8A0A1C1655A0AB68576280
        state: absent

    - name: Apt keyrings directory present
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755
        owner: root
        group: root

    - name: NodeJS ASCII armored GPG key present
      ansible.builtin.get_url:
        url: "{{ nodejs_nodesource_gpg_url }}"
        checksum: "{{ nodejs_nodesource_gpg_checksum }}"
        dest: /root/nodejs.asc
        force: true
        mode: 0644
        owner: root
        group: root
      register: nodejs_gpg_asc_file

    - name: Stat NodeJS GPG ASCII armored file
      ansible.builtin.stat:
        path: /root/nodejs.asc
      register: nodejs_asc_file

    - name: Check gpg key when it exists
      block:

        - name: Stat NodeJS GPG dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/nodejs.gpg
          register: nodejs_gpg_file

        - name: NodeJS GPG key dearmored
          ansible.builtin.shell: |
            set -e -o pipefail
            gpg --dearmor < /root/nodejs.asc > /etc/apt/keyrings/nodejs.gpg
          args:
            executable: "{{ ansible_local.bash.path }}"
          when: ( nodejs_gpg_asc_file.changed | bool ) or ( not nodejs_gpg_file.stat.exists | bool )

        - name: Stat NodeJS GPG dearmored file
          ansible.builtin.stat:
            path: /etc/apt/keyrings/nodejs.gpg
          register: nodejs_gpg_file

        - name: NodeJS GPG key check command
          ansible.builtin.command: >
            gpg --with-colons
            {% if ansible_local.gpg.version is version('2.2.12', '<') %}
            --with-fingerprint --with-subkey-fingerprint
            {% else %}
            --show-keys
            {% endif %}
            /etc/apt/keyrings/nodejs.gpg
          when: ( nodejs_gpg_file.stat.exists | bool )
          check_mode: false
          changed_when: false
          register: nodejs_gpg

        - name: NodeJS GPG key check only first fingerprint for GPG versions less that 2.2.12
          ansible.builtin.assert:
            that:
              - fpr in nodejs_gpg.stdout
          when:
            - ( ansible_loop.first | bool )
            - ( ansible_local.gpg.version is version('2.2.12', '<') )
          loop: "{{ nodejs_nodesource_gpg_fingerprints }}"
          loop_control:
            extended: true
            loop_var: fpr

        - name: NodeJS GPG key check all fingerprints
          ansible.builtin.assert:
            that:
              - fpr in nodejs_gpg.stdout
          when: ( ansible_local.gpg.version is version('2.2.12', '>=') )
          loop: "{{ nodejs_nodesource_gpg_fingerprints }}"
          loop_control:
            loop_var: fpr

      when: ( nodejs_asc_file.stat.exists | bool )

    - name: NodeJS repository sources file present
      ansible.builtin.template:
        src: nodejs.sources.j2
        dest: /etc/apt/sources.list.d/node.sources
        mode: 0644
        owner: root
        group: root
      register: nodejs_sources

    - name: NodeJS apt preferences present
      ansible.builtin.template:
        src: nodejs.pref.j2
        dest: /etc/apt/preferences.d/node.pref
        mode: 0644
        owner: root
        group: root
      register: nodejs_preferences

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true
      when: ( nodejs_sources.changed | bool ) or ( nodejs_preferences.changed | bool )

  tags:
    - nodejs
    - nodejs_apt
...
