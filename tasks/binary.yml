# Copyright 2020-2024 Chris Croome
#
# This file is part of the Webarchitects Node.js Ansible role.
#
# The Webarchitects Node.js Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Node.js Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Node.js Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Install Node.js binary package following https://github.com/nodejs/help/wiki/Installation
  block:

    - name: Remove Node.js APT package
      ansible.builtin.apt:
        pkg:
          - nodejs
        state: absent

    # NOTE This will need updating for this role to support an architecture other that amd64
    - name: Set a fact for the CPU architecture
      ansible.builtin.set_fact:
        nodejs_arch: linux-x64
      when: ansible_facts.ansible_local.dpkg.arch == "amd64"

    - name: Check the latest version of Node.js
      block:

        - name: Check the latest version of Node.js
          ansible.builtin.uri:
            url: https://github.com/nodejs/node/releases/latest
            method: HEAD
            status_code: 302
            follow_redirects: none
          check_mode: false
          changed_when: false
          register: nodejs_headers

        - name: Debug Node.js latest headers
          ansible.builtin.debug:
            msg:
              - "Location: {{ nodejs_headers.location }}"
              - "Path: {{ nodejs_headers.location | urlsplit('path') }}"
              - "Version: {{ nodejs_headers.location | urlsplit('path') | basename | regex_replace('^v') | string }}"
            verbosity: 2

        - name: Set a fact for the latest version of Node.js
          ansible.builtin.set_fact:
            nodejs_version_latest: "{{ nodejs_headers.location | urlsplit('path') | basename | regex_replace('^v') | string }}"

      when: nodejs_version == "latest"

    - name: Check the latest version of a Node.js release
      block:

        - name: Download the SHASUMS256.txt for the required Node.js version
          ansible.builtin.get_url:
            url: "https://nodejs.org/dist/{{ nodejs_version }}/SHASUMS256.txt"
            dest: "{{ nodejs_download_path }}/SHASUMS256.txt"
            force: true
            mode: "0644"
            owner: root
            group: root

        - name: Slurp the SHASUMS256.txt for the required Node.js version
          ansible.builtin.slurp:
            src: "{{ nodejs_download_path }}/SHASUMS256.txt"
          register: nodejs_sha256_b64encoded

        - name: Set a fact for the file name of the latest version for Node.js release x
          ansible.builtin.set_fact:
            nodejs_version_x_file: "{{ line | regex_replace('[0-9a-z]{64}') | trim }}"
          when:
            - nodejs_arch in line
            - line is regex('[.]tar[.]gz$')
          loop: "{{ ( nodejs_sha256_b64encoded['content'] | b64decode | trim ).split('\n') }}"
          loop_control:
            loop_var: line
            label: "{{ line | regex_replace('[0-9a-z]{64}') | trim }}"

        - name: Debug Node.js release x file
          ansible.builtin.debug:
            var: nodejs_version_x_file
            verbosity: 2

        - name: Set a fact for the version number for Node.js release x
          ansible.builtin.set_fact:
            nodejs_version_x: "{{ nodejs_version_x_file | regex_replace('^node-v') | regex_replace(nodejs_arch) | regex_replace('-[.]tar[.]gz$') }}"

        - name: Debug Node.js release x
          ansible.builtin.debug:
            var: nodejs_version_x
            verbosity: 2

      when: nodejs_version is regex ('^latest-v[0-9]{1,2}[.]x$')

    - name: Set a fact for the required version of Node.js
      ansible.builtin.set_fact:
        nodejs_version_required: "{% if nodejs_version == 'latest' %}{{ nodejs_version_latest }}{% elif nodejs_version is regex('^latest-v[0-9]{1,2}[.]x$') %}{{ nodejs_version_x }}{% else %}{{ nodejs_version }}{% endif %}"
        nodejs_version_required_v: "{% if nodejs_version == 'latest' %}v{{ nodejs_version_latest }}{% elif nodejs_version is regex('^latest-v[0-9]{1,2}[.]x$') %}v{{ nodejs_version_x }}{% else %}v{{ nodejs_version }}{% endif %}"

    - name: Node.js GPG keys present
      ansible.builtin.include_tasks: gpg_recv_key.yml
      loop: "{{ nodejs_release_keys }}"
      loop_control:
        loop_var: nodejs_fpr

    - name: Node.js download directory present
      ansible.builtin.file:
        path: "{{ nodejs_download_path }}"
        state: directory
        mode: "0700"
        owner: root
        group: root

    - name: Node.js SHA256SUMS sig present
      ansible.builtin.get_url:
        url: "https://nodejs.org/dist/v{{ nodejs_version_required }}/SHASUMS256.txt.sig"
        dest: "{{ nodejs_download_path }}/SHASUMS256.txt.sig"
        force: true
        mode: "0644"
        owner: root
        group: root

    - name: Node.js SHA256SUMS present
      ansible.builtin.get_url:
        url: "https://nodejs.org/dist/v{{ nodejs_version_required }}/SHASUMS256.txt"
        dest: "{{ nodejs_download_path }}/SHASUMS256.txt"
        force: true
        mode: "0644"
        owner: root
        group: root

    - name: Download Node.js binary
      ansible.builtin.get_url:
        url: "https://nodejs.org/dist/v{{ nodejs_version_required }}/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}.tar.gz"
        dest: "{{ nodejs_download_path }}/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}.tar.gz"
        timeout: 30
        mode: "0644"
        owner: root
        group: root

    - name: Node.js SHA256SUMS GPG signature checked
      ansible.builtin.shell: |
        set -e -o pipefail
        grep node-v{{ nodejs_version_required }}-{{ nodejs_arch }}.tar.gz SHASUMS256.txt | sha256sum -c -
      changed_when: false
      check_mode: false
      args:
        executable: "{{ ansible_facts.ansible_local.bash.path }}"
        chdir: "{{ nodejs_download_path }}"

    - name: Node.js lib directory present
      ansible.builtin.file:
        path: /usr/local/lib/nodejs
        state: directory
        mode: "0755"
        owner: root
        group: root

    - name: Node.js binary package unarchived
      ansible.builtin.unarchive:
        src: "{{ nodejs_download_path }}/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}.tar.gz"
        dest: /usr/local/lib/nodejs
        remote_src: true

    - name: Test node version
      ansible.builtin.command: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/node -v"
      check_mode: false
      changed_when: false
      register: nodejs_test
      failed_when: ( nodejs_test.stdout != nodejs_version_required_v )

    - name: Node.js symlinks present
      ansible.builtin.file:
        src: "{{ file.src }}"
        dest: "{{ file.dest }}"
        state: link
        follow: false
        mode: "0777"
        owner: root
        group: root
      loop:
        - src: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/corepack"
          dest: "/usr/local/bin/corepack"
        - src: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/node"
          dest: "/usr/local/bin/node"
        - src: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/node"
          dest: "/usr/local/bin/nodejs"
        - src: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/npm"
          dest: "/usr/local/bin/npm"
        - src: "/usr/local/lib/nodejs/node-v{{ nodejs_version_required }}-{{ nodejs_arch }}/bin/npx"
          dest: "/usr/local/bin/npx"
      loop_control:
        loop_var: file
        label: "{{ file.dest | basename }}"

    - name: Install additional Node.js packages
      community.general.npm:
        name: "{{ pkg }}"
        executable: "/usr/local/bin/npm"
        global: true
      loop: "{{ nodejs_packages }}"
      loop_control:
        loop_var: pkg
      when:
        - nodejs_packages is defined
        - nodejs_packages != []

  tags:
    - nodejs
...
